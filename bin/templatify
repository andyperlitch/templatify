#!/usr/bin/env node

var fs = require('fs'),
  nopt = require('nopt'),
  path = require('path'),
  browserify = require('browserify'),
  templatify = require('..');

// options
var options = { output: String, helpers: String, compress: Boolean, adapter: String, help: Boolean },
  shorthands = { o: ['--output'], c: ['--compress'], h: ['--helpers'], a: ['--adapter'] },
  opts = nopt(options, shorthands),
  files = opts.argv.remain,
  out = path.resolve(opts.output);

if(opts.help || !files.length) return console.log([
  'Usage: ',
  '',
  '   templatify files* [options]',
  '', '',
  'Options:',
  '   -o, --output    Output file, output to stdout if ommited',
  '   -h, --helpers   Glob patterns for helper inclusion, usually js files (**/*.js)',
  '   -c, --compress  Uglify bundle output (false)',
  '   -a, --adapter   Template adapter to use, handlebars or underscore (handlebars)',
  "   --help          You're starting at it",
  ''
].join('\n'));

var bundle = browserify()
  .use(templatify('./', {
    files: files,
    helpers: opts.helpers || ['**/*.js'],
    adapter: templatify.adapters[opts.adapter || 'handlebars']
  }))
  .bundle();

if(!opts.output) return console.log(bundle);
fs.writeFileSync(out, bundle);
console.log('File ', path.basename(out), 'generated to ', out);
